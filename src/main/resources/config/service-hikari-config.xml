<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/cache    http://www.springframework.org/schema/cache/spring-cache.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

<!--
    原文链接：https://blog.csdn.net/qq_41864648/article/details/109046966
-->
    <!--<context:property-placeholder properties-ref="yamlConsumerProperties"/>
    <bean id="yamlConsumerProperties" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
        <property name="resources" value="classpath:config/service-data-source.yml"/>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
          destroy-method="close">
        <property name="driverClassName"
                  value="${spring.datasource.hikari.driver-class-name}"/> &lt;!&ndash; 无需指定，除非系统无法自动识别 &ndash;&gt;
        <property name="jdbcUrl" value="${spring.datasource.hikari.jdbc-url}"/>
        <property name="username" value="${spring.datasource.hikari.username}"/>
        <property name="password" value="${spring.datasource.hikari.password}"/>
        &lt;!&ndash; 连接只读数据库时配置为true， 保证安全 &ndash;&gt;
        <property name="readOnly" value="${spring.datasource.hikari.read-only}"/>
        &lt;!&ndash; 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 &ndash;&gt;
        <property name="connectionTimeout"
                  value="${spring.datasource.hikari.connection-timeout}"/>
        &lt;!&ndash; 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 &ndash;&gt;
        <property name="idleTimeout" value="${spring.datasource.hikari.idle-timeout}"/>
        &lt;!&ndash; 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL
            wait_timeout参数（show variables like '%timeout%';） &ndash;&gt;
        <property name="maxLifetime" value="${spring.datasource.hikari.max-lifetime}"/>
        &lt;!&ndash; 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) &ndash;&gt;
        <property name="maximumPoolSize"
                  value="${spring.datasource.hikari.maximum-pool-size}"/>
    </bean>-->

</beans>
